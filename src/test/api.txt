when create 

target is send message to single player, send message to team, send message to three teams, sen message to all 

{
    "playerName": "s",
    "numPlayers": "2",
    "numTeams": "2",
    "roomId": "sa",
    "roomPassword": "h",
    "PlayerUseName": "teja123",
    "isCreate": true
}


connection table 
roomId:
playerId : 
clientID:
teamid:

room table
roomid :  
roompas : 
numplayers: 
numTeam: 
status: waiting, ingame, finished




gameState table:
roomid
gameArray
deck of cards
current player
order of the player 
sequences


[{"name":"vishal","playerId":"AK0p5r","teamId":"1"},{"name":"bharat","playerId":"JP1d71","teamId":"2"},{"name":"vishal","playerId":"AKfe0p5r","teamId":"1"},{"name":"bharat","playerId":"JP1dbfb71","teamId":"2"},{"name":"vishal","playerId":"AKwefe0p5r","teamId":"1"},{"name":"bharat","playerId":"JP1hgtd71","teamId":"2"},{"name":"vishal","playerId":"AKkuju0p5r","teamId":"1"},{"name":"bharat","playerId":"JP1djefefy71","teamId":"2"},{"name":"bharat","playerId":"JP1faefeadjy71","teamId":"2"},{"name":"bharat","playerId":"JP1feafedjy71","teamId":"2"},{"name":"bharat","playerId":"JP1ddfsejy71","teamId":"2"},{"name":"bharat","playerId":"JP1ddfefaesejy71","teamId":"2"}]


else if  (isSelectionActive === 'Claim'  ) {
        if (
          !selectedCellIndex.some(([r, c]) => r === row && c === col) &&
          grid[row][col].hasIcon && (grid[row][col].player === curTeam ||corners.some(([r, c]) => r === row && c === col))
        ) {
          if (corners.some(([r, c]) => r === row && c === col)) {
            setMaxSelectionLimit(4);
          }
          const selectedcells = [...selectedCellIndex, [row, col]];
          setSelectedCellIndex(selectedcells);
  
          if (selectedcells.length === maxSelectionLimit) {
            if (maxSelectionLimit === 4) setMaxSelectionLimit(5);
            if(arePointsInLine(selectedcells)){
              
              sendMessage({ action: "sendMove", Message: { roomId:RoomId, command : "Claim", playerMove: [[Number(curTeam),0],...selectedcells], lastPlayedCard: PlayedCard, currentPlayer } })
            }
            setIsSelectionActive('');        
                        setSelectedCellIndex([]);
          }
        }
      } 

       if (!selectedCellIndex.some(([r, c]) => r === row && c === col) &&
  grid[row][col].hasIcon && (grid[row][col].player === curTeam ||corners.some(([r, c]) => r === row && c === col))
) {
  const selectionLimit = corners.some(([r, c]) => r === row && c === col) ? 4 : 5;
  const selectedcells = [...selectedCellIndex, [row, col]];
  setSelectedCellIndex(selectedcells);

  if (selectedcells.length === selectionLimit) {
    if(arePointsInLine(selectedcells)){
      sendMessage({ action: "sendMove", Message: { roomId:RoomId, command : "Claim", playerMove: [[Number(curTeam),0],...selectedcells], lastPlayedCard: PlayedCard, currentPlayer } })
    }
    setIsSelectionActive('');        
    setSelectedCellIndex([]);
  }
}     